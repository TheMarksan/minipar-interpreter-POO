
# Declaração dos canais de comunicação (canais apenas para comunicação; threads são criadas pelo bloco PAR)
# request: Cliente -> Servidor (envia operação e valores)
# response: Servidor -> Cliente (retorna resultado)
c_channel request;
c_channel response;


VOID computador_1() {
    STRING operacao;
    FLOAT valor1;
    FLOAT valor2;
    FLOAT resultado;

    PRINT("========================================\n");
    PRINT("  CALCULADORA CLIENTE-SERVIDOR\n");
    PRINT("========================================\n");
    PRINT("\n");
    PRINT("Computador 1 (Cliente) - Iniciando...\n");
    PRINT("\n");
    
    # Apresentar opções da calculadora
    PRINT("Operações disponíveis:\n");
    PRINT("  + : Adição\n");
    PRINT("  - : Subtração\n");
    PRINT("  * : Multiplicação\n");
    PRINT("  / : Divisão\n");
    PRINT("\n");
    
    # Ler dados do usuário (pode usar INPUT() ou valores fixos para teste)
    # Para teste rápido, descomente as linhas abaixo:
    operacao = "+";
    valor1 = 15;
    valor2 = 7;
    
    # Para entrada interativa, descomente as linhas abaixo e comente as acima:
    # PRINT("Digite a operação (+, -, *, /): ");
    # operacao = INPUT();
    # PRINT("Digite o primeiro valor: ");
    # valor1 = INPUT();
    # PRINT("Digite o segundo valor: ");
    # valor2 = INPUT();
    
    PRINT("\n");
    PRINT("Cliente enviando para servidor...\n");
    PRINT("  Operação: " + operacao + "\n");
    PRINT("  Valor 1: " + valor1 + "\n");
    PRINT("  Valor 2: " + valor2 + "\n");
    
    # Enviar dados para o servidor via canal request
    # Observação: este envio ocorre entre threads criadas no bloco PAR
    request.send(operacao, valor1, valor2);
    
    # Aguardar resultado do servidor via canal response
    PRINT("\n");
    PRINT("Aguardando cálculo do servidor...\n");
    response.receive(resultado);
    
    # Apresentar resultado
    PRINT("\n");
    PRINT("========================================\n");
    PRINT("  RESULTADO DO SERVIDOR\n");
    PRINT("========================================\n");
    PRINT("Operação: " + valor1 + " " + operacao + " " + valor2 + "\n");
    PRINT("Resultado: " + resultado + "\n");
    PRINT("========================================\n");
}


VOID computador_2() {
    STRING operacao;
    FLOAT valor1;
    FLOAT valor2;
    FLOAT resultado;
    
    PRINT("\n");
    PRINT("Computador 2 (Servidor) - Aguardando requisição...\n");
    PRINT("\n");
    
    # Receber dados do cliente via canal request
    # Observação: recebido pelas threads do bloco PAR
    request.receive(operacao, valor1, valor2);
    
    PRINT("Servidor recebeu requisição:\n");
    PRINT("  Operação: " + operacao + "\n");
    PRINT("  Valor 1: " + valor1 + "\n");
    PRINT("  Valor 2: " + valor2 + "\n");
    PRINT("\n");
    
    # Executar cálculo conforme operação solicitada
    PRINT("Servidor processando cálculo...\n");
    
    if operacao == "+" {
        resultado = valor1 + valor2;
        PRINT("Cálculo: " + valor1 + " + " + valor2 + " = " + resultado + "\n");
    } else if operacao == "-" {
        resultado = valor1 - valor2;
        PRINT("Cálculo: " + valor1 + " - " + valor2 + " = " + resultado + "\n");
    } else if operacao == "*" {
        resultado = valor1 * valor2;
        PRINT("Cálculo: " + valor1 + " * " + valor2 + " = " + resultado + "\n");
    } else if operacao == "/" {
        if valor2 != 0 {
            resultado = valor1 / valor2;
            PRINT("Cálculo: " + valor1 + " / " + valor2 + " = " + resultado + "\n");
        } else {
            PRINT("ERRO: Divisão por zero!\n");
            resultado = 0;
        }
    } else {
        PRINT("ERRO: Operação inválida!\n");
        resultado = 0;
    }
    
    PRINT("\n");
    PRINT("Servidor enviando resultado para cliente...\n");
    
    # Enviar resultado para o cliente via canal response
    response.send(resultado);
    
    PRINT("Servidor: Operação concluída.\n");
}



# Bloco PAR: Cliente e Servidor executam em paralelo (threads)
# O canal sincroniza automaticamente - o RECEIVE bloqueia até dados chegarem
PAR {
    computador_1();
    computador_2();
}

PRINT("\n");
PRINT("Cliente-Servidor: Comunicação concluída com sucesso!\n");
PRINT("\n");
